{"version":3,"file":"static/js/236.f635eee3.chunk.js","mappings":"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","sources":["components/CreateMovie/MovieSearchList.styled.js","components/CreateMovie/MovieSearchItem.styled.js","components/CreateMovie/MovieSearchItem.jsx","components/CreateMovie/MovieSearchList.jsx","pages/MoviesPage.styled.js","components/SearchMovies.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const MovieListCont = styled.div`\n  padding: 0 35px;\n  \n`;\n\nexport const MovieListStyle = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 45px;\n  margin: 0px;\n  padding: 30px;\n  transition: all 1s ease-in-out;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const NameMov = styled.span`\n  margin-top: 10px;\n  text-align: center;\n  max-width: 270px;\n  color: white;\n  font-size: 22px;\n  font-weight: bold;\n\n\n  left: 40px;\n  opacity: 0.7;\n  \n`;\n\nexport const DescriptionMov = styled.p`\n  color: white;\n  font-size: 14px;\n  max-width: 270px;\n  opacity: 0.7;\n  transition: 1s all ease-in-out;\n  margin-bottom: auto;\n`;\n\nexport const MovieItemStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  min-width: 270px;\n  border: 2px solid grey;\n  border-radius: 30px;\n  height: 350px;\n  transition: all 1s ease-in-out;\n\n \n`;\n\nexport const ImgMovie = styled.img`\n  transition: all 1s ease-in-out;\n  width: 270px;\n  height: 200px;\n  object-fit: cover;\n  border-radius: 20px;\n`;\n\nexport const LinkStyle = styled(Link)`\n  text-transform: none;\n  text-decoration: none;\n`;\n","import React from 'react';\nimport {\n  MovieItemStyle,\n  ImgMovie,\n  LinkStyle,\n  NameMov,\n  DescriptionMov,\n} from './MovieSearchItem.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieItem = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <LinkStyle to={`${movie.id}`} state={{ from: location }}>\n              <MovieItemStyle>\n                <ImgMovie\n                  src={`https://image.tmdb.org/t/p/w500/${\n                    movie.backdrop_path || movie.poster_path\n                  }`}\n                  alt={movie.title}\n                />\n                <NameMov>{movie.title}</NameMov>\n                <DescriptionMov>\n                  Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                </DescriptionMov>\n              </MovieItemStyle>\n            </LinkStyle>\n          </li>\n        );\n      })}\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  MovieListCont,\n  MovieListStyle,\n} from './MovieSearchList.styled';\nimport { MovieItem } from './MovieSearchItem';\n\nexport const MovieList = ({ movies, titleMasege }) => {\n  return (\n    <MovieListCont>\n      <h1>{titleMasege}</h1>\n        <MovieListStyle>\n          <MovieItem movies={movies} />\n        </MovieListStyle>\n    </MovieListCont>\n  );\n};\n","import styled from 'styled-components';\nimport imgHero from '../img/hero/hero-2.jpg';\n\nexport const HeroCont = styled.div`\n  background-color: #151515;\n  color: white;\n\n  height: 50vh;\n  padding: 50px;\n\n  background: linear-gradient(to bottom, rgba(0, 0, 0, 0), #151515),\n    url(${imgHero});\n`;\n\nexport const Title = styled.p`\n  font-size: 56px;\n  color: rgb(236, 50, 38);\n  font-weight: 800;\n  text-transform: uppercase;\n  margin: 0;\n`;\n\nexport const Text = styled.p`\n  font-size: 16px;\n  max-width: 500px;\n  font-weight: 500;\n  color: lightgray;\n  margin: 30px 0;\n  font-family: 'Roboto', sans-serif;\n`;\n\nexport const WarningMsg = styled.p`\n  margin-left: 50px;\n  font-size: 20px;\n  font-weight: 500;\n  color: lightgray;\n  font-family: 'Roboto', sans-serif;\n`;\n\n\n\nexport const InputWraper = styled.div`\n  display: flex;\n  font-size: 20px;\n`;\n\n  export const BtnSearch = styled.button`\n    background-color: #4dbf00;\n    font-size: 20px;\n    color: white;\n    padding: 10px 20px;\n    border: solid 3px lightgray;\n    border-top-right-radius: 10px;\n    border-bottom-right-radius: 10px;\n    border-left: none;\n    outline: none;\n    font-weight: bold;\n  `;\n\n  export const InputSearch = styled.input`\n    background-color: inherit;\n    font-size: 20px;\n    color: white;\n    padding: 10px 10px;\n    border-top-left-radius: 10px;\n    border-bottom-left-radius: 10px;\n\n    border: solid 3px lightgray;\n    border-right: none;\n    /* outline: none; */\n    font-weight: bold;\n\n    &:focus-visible {\n      /* Добавьте стили для активированного состояния, если нужно */\n      outline: none; /* Убираем внутреннюю обводку в Chrome и Firefox */\n      box-shadow: 0 0 5px rgba(0, 0, 0, 0.3); /* Пример тени вокруг инпута */\n    }\n  `;","import {\n    BtnSearch,\n    InputSearch,\n    InputWraper,\n} from '../pages/MoviesPage.styled';\nimport { useState } from 'react';\n\nexport const SearchMovies = ({ onSubmit, LinkQuery }) => {\n  const [query, setQuery] = useState(LinkQuery);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query.trim());\n  };\n\n  const handleChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <InputWraper>\n          <InputSearch\n            value={query}\n            name=\"query\"\n            type=\"text\"\n            placeholder=\"Movie title\"\n            onChange={handleChange}\n          />\n          <BtnSearch type=\"submit\">Search</BtnSearch>\n        </InputWraper>\n      </form>\n    </>\n  );\n};\n","import { fetchSerchMovies } from 'api';\nimport { MovieList } from 'components/CreateMovie/MovieSearchList';\nimport {\n  HeroCont,\n  Title,\n  Text,\n  WarningMsg,\n} from './MoviesPage.styled';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchMovies } from 'components/SearchMovies';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  \n   const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '' || query === null) {\n      return;\n    }\n    \n    const fetchData = async () => {\n      try {\n        const response = await fetchSerchMovies(query);\n        setMovies(response.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, [query]);\n\n\n  const handleSubmit = searchQuery => {\n    setSearchParams(searchQuery === '' ? {} : { query: searchQuery });\n  };\n\n  return (\n    <>\n      <HeroCont>\n        <Title>find your movie</Title>\n        <Text>\n          Lorem ipsum dolor sit amet consectetur, adipisicing elit. Sit\n          dignissimos iste, officiis nulla, necessitatibus sunt nostrum, cumque\n          laudantium distinctio unde ex aliquid possimus eos accusantium illo\n          dicta. Dolores, provident harum.\n        </Text>\n        <SearchMovies onSubmit={handleSubmit} LinkQuery={query} />\n      </HeroCont>\n      {movies.length > 0 ? (\n        <MovieList movies={movies} />\n      ) : (\n        <WarningMsg>No movie found for your request!</WarningMsg>\n      )}\n    </>\n  );\n}\n"],"names":["MovieListCont","styled","_templateObject","_taggedTemplateLiteral","MovieListStyle","_templateObject2","NameMov","DescriptionMov","MovieItemStyle","_templateObject3","ImgMovie","_templateObject4","LinkStyle","Link","_templateObject5","MovieItem","_ref","movies","location","useLocation","_jsx","_Fragment","children","map","movie","to","concat","id","state","from","_jsxs","src","backdrop_path","poster_path","alt","title","MovieList","titleMasege","HeroCont","imgHero","Title","Text","WarningMsg","InputWraper","BtnSearch","_templateObject6","InputSearch","_templateObject7","SearchMovies","onSubmit","LinkQuery","_useState","useState","_useState2","_slicedToArray","query","setQuery","e","preventDefault","trim","value","name","type","placeholder","onChange","currentTarget","MoviesPage","_searchParams$get","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchSerchMovies","sent","results","t0","console","error","stop","apply","arguments","searchQuery","length"],"sourceRoot":""}